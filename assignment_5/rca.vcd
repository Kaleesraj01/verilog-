$date
	Sun Sep 14 14:32:58 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ripple_carry_adder_4bit $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " cout $end
$var wire 5 ) c [4:0] $end
$scope begin adder_loop[0] $end
$var parameter 2 * i $end
$scope module fa $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - cin $end
$var wire 1 . cout $end
$var wire 1 / sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[1] $end
$var parameter 2 0 i $end
$scope module fa $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 3 cin $end
$var wire 1 4 cout $end
$var wire 1 5 sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[2] $end
$var parameter 3 6 i $end
$scope module fa $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 cin $end
$var wire 1 : cout $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$scope begin adder_loop[3] $end
$var parameter 3 < i $end
$scope module fa $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? cin $end
$var wire 1 @ cout $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 <
b10 6
b1 0
b0 *
$end
#0
$dumpvars
0A
0@
0?
0>
0=
0;
0:
09
08
07
05
04
03
02
01
0/
0.
0-
0,
0+
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#10
1A
1?
1:
19
14
13
b1110 )
1.
05
b1000 !
b1000 (
0;
1,
12
1+
17
b11 $
b11 '
b101 #
b101 &
#20
1"
b0 !
b0 (
0A
b11110 )
1@
02
11
1=
b1 $
b1 '
b1111 #
b1111 &
#30
1"
1@
b0 !
b0 (
0A
1?
1:
1-
18
0+
07
b11111 )
1%
b101 $
b101 '
b1010 #
b1010 &
#40
